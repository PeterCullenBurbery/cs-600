@model WebApplication1.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<h2>@ViewBag.Title.</h2>
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <!-- Birthdate -->
    <div class="form-group">
        @Html.LabelFor(m => m.Birthdate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <!-- Date picker for the date part of DateTimeOffset -->
            @Html.TextBox("BirthdateDateOnly", Model.Birthdate?.ToString("yyyy-MM-dd"), new { @class = "form-control", type = "date" })
            @Html.TextBox("BirthdateTimeOnly", Model.Birthdate?.ToString("HH:mm"), new { @class = "form-control", type = "time" })
            <!-- Hidden field to capture the offset part of DateTimeOffset -->
            @Html.Hidden("BirthdateOffset", "", new { id = "BirthdateOffset" })
            @Html.ValidationMessageFor(m => m.Birthdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- First Name -->
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Middle Name -->
    <div class="form-group">
        @Html.LabelFor(m => m.MiddleName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Second Middle Name -->
    <div class="form-group">
        @Html.LabelFor(m => m.SecondMiddleName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.SecondMiddleName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SecondMiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Last Name -->
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Suffix -->
    <div class="form-group">
        @Html.LabelFor(m => m.Suffix, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Suffix, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Suffix, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Email Address -->
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Phone Number -->
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Address -->
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Password -->
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Confirm Password -->
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Submit Button -->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Set the timezone offset when the page loads
        document.addEventListener("DOMContentLoaded", function () {
            const offsetMinutes = new Date().getTimezoneOffset();
            const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);
            const offsetSign = offsetMinutes > 0 ? '-' : '+';
            const offsetString = `${offsetSign}${String(offsetHours).padStart(2, '0')}:${String(Math.abs(offsetMinutes) % 60).padStart(2, '0')}`;
            document.getElementById("BirthdateOffset").value = offsetString;
        });
    </script>
}
